group 'ar.edu.unrc.pellegrini.franco'
version '1.0.0'

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '5.3.1'
distributionUrl = distributionUrl.replace("bin", "all")

}

//https://docs.gradle.org/current/userguide/standard_plugins.html
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'signing'
apply plugin: 'project-report'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

javadoc {
    options.encoding = 'UTF-8'
}

compileJava {
    sourceCompatibility = '12'
    targetCompatibility = '12'
    options.encoding = 'UTF-8'
}

dependencies {
    // https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'

    compile fileTree(dir: 'libs', include: '*.jar')
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.0.0'
    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.0.0'
    testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
}

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "http://clojars.org/repo/" }
    }
}

//create a single Jar with all dependencies
task finalFatJar(type: Jar) {
    manifest {
        attributes('Implementation-Title': rootProject.name,
                'Application-Name': 'Proyecto Final Redes 2017',
                'Implementation-Version': version,
                'Built-By': 'Franco Gast√≥n Pellegrini',
                'Built-Date': new Date(),
                'Built-Java': System.getProperty('java.version'),
                'Sealed': 'true')
    }
    baseName = project.name
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

configure(finalFatJar) {
    group = 'distribution'
    description = 'Create a big Jar with all dependency'
}
